# .github/workflows/main_workflow.yml
name: Main Workflow

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  deploy_iac:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.5 # Replace with your Terraform version

      - name: Initialize Terraform
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        working-directory: ./IAC
        run: terraform init

      - name: Plan Terraform
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        working-directory: ./IAC
        run: terraform plan -var="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}"


      - name: Apply Terraform
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        working-directory: ./IAC
        run: terraform apply -auto-approve -var="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}"

  deploy_api:
    needs: deploy_iac
    runs-on: ubuntu-latest

    env:
        AZURE_FUNCTIONAPP_NAME: 'darksideleasing-dev-http'   # set this to your function app name on Azure
        AZURE_FUNCTIONAPP_PACKAGE_PATH: './DarkSideLeasing.App.Api'       # set this to the path to your function app project, defaults to the repository root
        DOTNET_VERSION: '8.0'  

    steps:
     - name: 'Checkout GitHub Action'
       uses: actions/checkout@v4

     - name: Login to Azure
       uses: azure/login@v1
       with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

     - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
       uses: actions/setup-dotnet@v4
       with:
         dotnet-version: ${{ env.DOTNET_VERSION }}

     - name: 'Resolve Project Dependencies Using Dotnet'
       shell: pwsh # For Linux, use bash
       run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet build --configuration Release --output ./output
        popd

     - name: 'Run Azure Functions Action'
       uses: Azure/functions-action@v1
       id: fa
       with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'


  deploy_queue:
    needs: deploy_iac
    runs-on: ubuntu-latest

    env:
     AZURE_FUNCTIONAPP_NAME: 'darksideleasing-demo-durable'   # set this to your function app name on Azure
     AZURE_FUNCTIONAPP_PACKAGE_PATH: './DarksideLeasing.App.Queue'       # set this to the path to your function app project, defaults to the repository root
     DOTNET_VERSION: '8.0'                   # set this to the dotnet version to use (e.g. '2.1.x', '3.1.x', '5.0.x')

    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: Login to Azure
      uses: azure/login@v1
      with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 'Resolve Project Dependencies Using Dotnet'
      shell: pwsh # For Linux, use bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet build --configuration Release --output ./output
        popd

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
